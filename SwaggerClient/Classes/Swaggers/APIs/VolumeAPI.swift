//
// VolumeAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class VolumeAPI: APIBase {
    /**
     Create a volume
     
     - parameter volumeConfig: (body) Volume configuration 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func volumeCreate(volumeConfig volumeConfig: VolumeConfig, completion: ((data: Volume?, error: ErrorType?) -> Void)) {
        volumeCreateWithRequestBuilder(volumeConfig: volumeConfig).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create a volume
     - POST /volumes/create
     - examples: [{example={
  "Name" : "tardis",
  "Driver" : "custom",
  "Mountpoint" : "/var/lib/docker/volumes/tardis",
  "Status" : {
    "hello" : "world"
  },
  "Labels" : {
    "com.example.some-label" : "some-value",
    "com.example.some-other-label" : "some-other-value"
  },
  "Scope" : "local",
  "CreatedAt" : "2016-06-07T20:31:11.853781916Z"
}, contentType=application/json}]
     
     - parameter volumeConfig: (body) Volume configuration 

     - returns: RequestBuilder<Volume> 
     */
    public class func volumeCreateWithRequestBuilder(volumeConfig volumeConfig: VolumeConfig) -> RequestBuilder<Volume> {
        let path = "/volumes/create"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = volumeConfig.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Volume>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Remove a volume
     
     - parameter name: (path) Volume name or ID 
     - parameter force: (query) Force the removal of the volume (optional, default to false)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func volumeDelete(name name: String, force: Bool? = nil, completion: ((error: ErrorType?) -> Void)) {
        volumeDeleteWithRequestBuilder(name: name, force: force).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Remove a volume
     - DELETE /volumes/{name}
     - Instruct the driver to remove the volume.
     
     - parameter name: (path) Volume name or ID 
     - parameter force: (query) Force the removal of the volume (optional, default to false)

     - returns: RequestBuilder<Void> 
     */
    public class func volumeDeleteWithRequestBuilder(name name: String, force: Bool? = nil) -> RequestBuilder<Void> {
        var path = "/volumes/{name}"
        path = path.stringByReplacingOccurrencesOfString("{name}", withString: "\(name)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "force": force
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Inspect a volume
     
     - parameter name: (path) Volume name or ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func volumeInspect(name name: String, completion: ((data: Volume?, error: ErrorType?) -> Void)) {
        volumeInspectWithRequestBuilder(name: name).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Inspect a volume
     - GET /volumes/{name}
     - examples: [{example={
  "Name" : "tardis",
  "Driver" : "custom",
  "Mountpoint" : "/var/lib/docker/volumes/tardis",
  "Status" : {
    "hello" : "world"
  },
  "Labels" : {
    "com.example.some-label" : "some-value",
    "com.example.some-other-label" : "some-other-value"
  },
  "Scope" : "local",
  "CreatedAt" : "2016-06-07T20:31:11.853781916Z"
}, contentType=application/json}]
     
     - parameter name: (path) Volume name or ID 

     - returns: RequestBuilder<Volume> 
     */
    public class func volumeInspectWithRequestBuilder(name name: String) -> RequestBuilder<Volume> {
        var path = "/volumes/{name}"
        path = path.stringByReplacingOccurrencesOfString("{name}", withString: "\(name)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Volume>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     List volumes
     
     - parameter filters: (query) JSON encoded value of the filters (a &#x60;map[string][]string&#x60;) to process on the volumes list. Available filters:  - &#x60;dangling&#x3D;&lt;boolean&gt;&#x60; When set to &#x60;true&#x60; (or &#x60;1&#x60;), returns all    volumes that are not in use by a container. When set to &#x60;false&#x60;    (or &#x60;0&#x60;), only volumes that are in use by one or more    containers are returned. - &#x60;driver&#x3D;&lt;volume-driver-name&gt;&#x60; Matches volumes based on their driver. - &#x60;label&#x3D;&lt;key&gt;&#x60; or &#x60;label&#x3D;&lt;key&gt;:&lt;value&gt;&#x60; Matches volumes based on    the presence of a &#x60;label&#x60; alone or a &#x60;label&#x60; and a value. - &#x60;name&#x3D;&lt;volume-name&gt;&#x60; Matches all or part of a volume name.  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func volumeList(filters filters: String? = nil, completion: ((data: VolumeListResponse?, error: ErrorType?) -> Void)) {
        volumeListWithRequestBuilder(filters: filters).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     List volumes
     - GET /volumes
     - examples: [{example={
  "Volumes" : [ {
    "CreatedAt" : "2017-07-19T12:00:26Z",
    "Name" : "tardis",
    "Driver" : "local",
    "Mountpoint" : "/var/lib/docker/volumes/tardis",
    "Labels" : {
      "com.example.some-label" : "some-value",
      "com.example.some-other-label" : "some-other-value"
    },
    "Scope" : "local",
    "Options" : {
      "device" : "tmpfs",
      "o" : "size=100m,uid=1000",
      "type" : "tmpfs"
    }
  } ],
  "Warnings" : [ ]
}, contentType=application/json}]
     
     - parameter filters: (query) JSON encoded value of the filters (a &#x60;map[string][]string&#x60;) to process on the volumes list. Available filters:  - &#x60;dangling&#x3D;&lt;boolean&gt;&#x60; When set to &#x60;true&#x60; (or &#x60;1&#x60;), returns all    volumes that are not in use by a container. When set to &#x60;false&#x60;    (or &#x60;0&#x60;), only volumes that are in use by one or more    containers are returned. - &#x60;driver&#x3D;&lt;volume-driver-name&gt;&#x60; Matches volumes based on their driver. - &#x60;label&#x3D;&lt;key&gt;&#x60; or &#x60;label&#x3D;&lt;key&gt;:&lt;value&gt;&#x60; Matches volumes based on    the presence of a &#x60;label&#x60; alone or a &#x60;label&#x60; and a value. - &#x60;name&#x3D;&lt;volume-name&gt;&#x60; Matches all or part of a volume name.  (optional)

     - returns: RequestBuilder<VolumeListResponse> 
     */
    public class func volumeListWithRequestBuilder(filters filters: String? = nil) -> RequestBuilder<VolumeListResponse> {
        let path = "/volumes"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "filters": filters
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<VolumeListResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Delete unused volumes
     
     - parameter filters: (query) Filters to process on the prune list, encoded as JSON (a &#x60;map[string][]string&#x60;).  Available filters: - &#x60;label&#x60; (&#x60;label&#x3D;&lt;key&gt;&#x60;, &#x60;label&#x3D;&lt;key&gt;&#x3D;&lt;value&gt;&#x60;, &#x60;label!&#x3D;&lt;key&gt;&#x60;, or &#x60;label!&#x3D;&lt;key&gt;&#x3D;&lt;value&gt;&#x60;) Prune volumes with (or without, in case &#x60;label!&#x3D;...&#x60; is used) the specified labels.  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func volumePrune(filters filters: String? = nil, completion: ((data: VolumePruneResponse?, error: ErrorType?) -> Void)) {
        volumePruneWithRequestBuilder(filters: filters).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Delete unused volumes
     - POST /volumes/prune
     - examples: [{example={
  "VolumesDeleted" : [ "VolumesDeleted", "VolumesDeleted" ],
  "SpaceReclaimed" : 0
}, contentType=application/json}]
     
     - parameter filters: (query) Filters to process on the prune list, encoded as JSON (a &#x60;map[string][]string&#x60;).  Available filters: - &#x60;label&#x60; (&#x60;label&#x3D;&lt;key&gt;&#x60;, &#x60;label&#x3D;&lt;key&gt;&#x3D;&lt;value&gt;&#x60;, &#x60;label!&#x3D;&lt;key&gt;&#x60;, or &#x60;label!&#x3D;&lt;key&gt;&#x3D;&lt;value&gt;&#x60;) Prune volumes with (or without, in case &#x60;label!&#x3D;...&#x60; is used) the specified labels.  (optional)

     - returns: RequestBuilder<VolumePruneResponse> 
     */
    public class func volumePruneWithRequestBuilder(filters filters: String? = nil) -> RequestBuilder<VolumePruneResponse> {
        let path = "/volumes/prune"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "filters": filters
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<VolumePruneResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
