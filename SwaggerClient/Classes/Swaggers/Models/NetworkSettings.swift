//
// NetworkSettings.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** NetworkSettings exposes the network settings in the API */
public class NetworkSettings: JSONEncodable {
    /** Name of the network&#39;a bridge (for example, &#x60;docker0&#x60;). */
    public var bridge: String?
    /** SandboxID uniquely represents a container&#39;s network stack. */
    public var sandboxID: String?
    /** Indicates if hairpin NAT should be enabled on the virtual interface.  */
    public var hairpinMode: Bool?
    /** IPv6 unicast address using the link-local prefix. */
    public var linkLocalIPv6Address: String?
    /** Prefix length of the IPv6 unicast address. */
    public var linkLocalIPv6PrefixLen: Int32?
    public var ports: PortMap?
    /** SandboxKey identifies the sandbox */
    public var sandboxKey: String?
    /**  */
    public var secondaryIPAddresses: [Address]?
    /**  */
    public var secondaryIPv6Addresses: [Address]?
    /** EndpointID uniquely represents a service endpoint in a Sandbox.  &lt;p&gt;&lt;br /&gt;&lt;/p&gt;  &gt; **Deprecated**: This field is only propagated when attached to the &gt; default \&quot;bridge\&quot; network. Use the information from the \&quot;bridge\&quot; &gt; network inside the &#x60;Networks&#x60; map instead, which contains the same &gt; information. This field was deprecated in Docker 1.9 and is scheduled &gt; to be removed in Docker 17.12.0  */
    public var endpointID: String?
    /** Gateway address for the default \&quot;bridge\&quot; network.  &lt;p&gt;&lt;br /&gt;&lt;/p&gt;  &gt; **Deprecated**: This field is only propagated when attached to the &gt; default \&quot;bridge\&quot; network. Use the information from the \&quot;bridge\&quot; &gt; network inside the &#x60;Networks&#x60; map instead, which contains the same &gt; information. This field was deprecated in Docker 1.9 and is scheduled &gt; to be removed in Docker 17.12.0  */
    public var gateway: String?
    /** Global IPv6 address for the default \&quot;bridge\&quot; network.  &lt;p&gt;&lt;br /&gt;&lt;/p&gt;  &gt; **Deprecated**: This field is only propagated when attached to the &gt; default \&quot;bridge\&quot; network. Use the information from the \&quot;bridge\&quot; &gt; network inside the &#x60;Networks&#x60; map instead, which contains the same &gt; information. This field was deprecated in Docker 1.9 and is scheduled &gt; to be removed in Docker 17.12.0  */
    public var globalIPv6Address: String?
    /** Mask length of the global IPv6 address.  &lt;p&gt;&lt;br /&gt;&lt;/p&gt;  &gt; **Deprecated**: This field is only propagated when attached to the &gt; default \&quot;bridge\&quot; network. Use the information from the \&quot;bridge\&quot; &gt; network inside the &#x60;Networks&#x60; map instead, which contains the same &gt; information. This field was deprecated in Docker 1.9 and is scheduled &gt; to be removed in Docker 17.12.0  */
    public var globalIPv6PrefixLen: Int32?
    /** IPv4 address for the default \&quot;bridge\&quot; network.  &lt;p&gt;&lt;br /&gt;&lt;/p&gt;  &gt; **Deprecated**: This field is only propagated when attached to the &gt; default \&quot;bridge\&quot; network. Use the information from the \&quot;bridge\&quot; &gt; network inside the &#x60;Networks&#x60; map instead, which contains the same &gt; information. This field was deprecated in Docker 1.9 and is scheduled &gt; to be removed in Docker 17.12.0  */
    public var iPAddress: String?
    /** Mask length of the IPv4 address.  &lt;p&gt;&lt;br /&gt;&lt;/p&gt;  &gt; **Deprecated**: This field is only propagated when attached to the &gt; default \&quot;bridge\&quot; network. Use the information from the \&quot;bridge\&quot; &gt; network inside the &#x60;Networks&#x60; map instead, which contains the same &gt; information. This field was deprecated in Docker 1.9 and is scheduled &gt; to be removed in Docker 17.12.0  */
    public var iPPrefixLen: Int32?
    /** IPv6 gateway address for this network.  &lt;p&gt;&lt;br /&gt;&lt;/p&gt;  &gt; **Deprecated**: This field is only propagated when attached to the &gt; default \&quot;bridge\&quot; network. Use the information from the \&quot;bridge\&quot; &gt; network inside the &#x60;Networks&#x60; map instead, which contains the same &gt; information. This field was deprecated in Docker 1.9 and is scheduled &gt; to be removed in Docker 17.12.0  */
    public var iPv6Gateway: String?
    /** MAC address for the container on the default \&quot;bridge\&quot; network.  &lt;p&gt;&lt;br /&gt;&lt;/p&gt;  &gt; **Deprecated**: This field is only propagated when attached to the &gt; default \&quot;bridge\&quot; network. Use the information from the \&quot;bridge\&quot; &gt; network inside the &#x60;Networks&#x60; map instead, which contains the same &gt; information. This field was deprecated in Docker 1.9 and is scheduled &gt; to be removed in Docker 17.12.0  */
    public var macAddress: String?
    /** Information about all networks that the container is connected to.  */
    public var networks: [String:EndpointSettings]?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["Bridge"] = self.bridge
        nillableDictionary["SandboxID"] = self.sandboxID
        nillableDictionary["HairpinMode"] = self.hairpinMode
        nillableDictionary["LinkLocalIPv6Address"] = self.linkLocalIPv6Address
        nillableDictionary["LinkLocalIPv6PrefixLen"] = self.linkLocalIPv6PrefixLen?.encodeToJSON()
        nillableDictionary["Ports"] = self.ports?.encodeToJSON()
        nillableDictionary["SandboxKey"] = self.sandboxKey
        nillableDictionary["SecondaryIPAddresses"] = self.secondaryIPAddresses?.encodeToJSON()
        nillableDictionary["SecondaryIPv6Addresses"] = self.secondaryIPv6Addresses?.encodeToJSON()
        nillableDictionary["EndpointID"] = self.endpointID
        nillableDictionary["Gateway"] = self.gateway
        nillableDictionary["GlobalIPv6Address"] = self.globalIPv6Address
        nillableDictionary["GlobalIPv6PrefixLen"] = self.globalIPv6PrefixLen?.encodeToJSON()
        nillableDictionary["IPAddress"] = self.iPAddress
        nillableDictionary["IPPrefixLen"] = self.iPPrefixLen?.encodeToJSON()
        nillableDictionary["IPv6Gateway"] = self.iPv6Gateway
        nillableDictionary["MacAddress"] = self.macAddress
        nillableDictionary["Networks"] = self.networks?.encodeToJSON()
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
