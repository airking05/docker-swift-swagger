//
// SwarmSpecCAConfigExternalCAs.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public class SwarmSpecCAConfigExternalCAs: JSONEncodable {
    public enum ModelProtocol: String { 
        case Cfssl = "cfssl"
    }
    /** Protocol for communication with the external CA (currently only &#x60;cfssl&#x60; is supported). */
    public var _protocol: ModelProtocol?
    /** URL where certificate signing requests should be sent. */
    public var URL: String?
    /** An object with key/value pairs that are interpreted as protocol-specific options for the external CA driver. */
    public var options: [String:String]?
    /** The root CA certificate (in PEM format) this external CA uses to issue TLS certificates (assumed to be to the current swarm root CA certificate if not provided). */
    public var cACert: String?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["Protocol"] = self._protocol?.rawValue
        nillableDictionary["URL"] = self.URL
        nillableDictionary["Options"] = self.options?.encodeToJSON()
        nillableDictionary["CACert"] = self.cACert
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
