//
// ContainerInspectResponseState.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** The state of the container. */
public class ContainerInspectResponseState: JSONEncodable {
    public enum Status: String { 
        case Created = "created"
        case Running = "running"
        case Paused = "paused"
        case Restarting = "restarting"
        case Removing = "removing"
        case Exited = "exited"
        case Dead = "dead"
    }
    /** The status of the container. For example, &#x60;\&quot;running\&quot;&#x60; or &#x60;\&quot;exited\&quot;&#x60;.  */
    public var status: Status?
    /** Whether this container is running.  Note that a running container can be _paused_. The &#x60;Running&#x60; and &#x60;Paused&#x60; booleans are not mutually exclusive:  When pausing a container (on Linux), the cgroups freezer is used to suspend all processes in the container. Freezing the process requires the process to be running. As a result, paused containers are both &#x60;Running&#x60; _and_ &#x60;Paused&#x60;.  Use the &#x60;Status&#x60; field instead to determine if a container&#39;s state is \&quot;running\&quot;.  */
    public var running: Bool?
    /** Whether this container is paused. */
    public var paused: Bool?
    /** Whether this container is restarting. */
    public var restarting: Bool?
    /** Whether this container has been killed because it ran out of memory. */
    public var oOMKilled: Bool?
    public var dead: Bool?
    /** The process ID of this container */
    public var pid: Int32?
    /** The last exit code of this container */
    public var exitCode: Int32?
    public var error: String?
    /** The time when this container was last started. */
    public var startedAt: String?
    /** The time when this container last exited. */
    public var finishedAt: String?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["Status"] = self.status?.rawValue
        nillableDictionary["Running"] = self.running
        nillableDictionary["Paused"] = self.paused
        nillableDictionary["Restarting"] = self.restarting
        nillableDictionary["OOMKilled"] = self.oOMKilled
        nillableDictionary["Dead"] = self.dead
        nillableDictionary["Pid"] = self.pid?.encodeToJSON()
        nillableDictionary["ExitCode"] = self.exitCode?.encodeToJSON()
        nillableDictionary["Error"] = self.error
        nillableDictionary["StartedAt"] = self.startedAt
        nillableDictionary["FinishedAt"] = self.finishedAt
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
