//
// Resources.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** A container&#39;s resources (cgroups config, ulimits, etc) */
public class Resources: JSONEncodable {
    /** An integer value representing this container&#39;s relative CPU weight versus other containers. */
    public var cpuShares: Int32?
    /** Memory limit in bytes. */
    public var memory: Int64?
    /** Path to &#x60;cgroups&#x60; under which the container&#39;s &#x60;cgroup&#x60; is created. If the path is not absolute, the path is considered to be relative to the &#x60;cgroups&#x60; path of the init process. Cgroups are created if they do not already exist. */
    public var cgroupParent: String?
    /** Block IO weight (relative weight). */
    public var blkioWeight: Int32?
    /** Block IO weight (relative device weight) in the form &#x60;[{\&quot;Path\&quot;: \&quot;device_path\&quot;, \&quot;Weight\&quot;: weight}]&#x60;.  */
    public var blkioWeightDevice: [ResourcesBlkioWeightDevice]?
    /** Limit read rate (bytes per second) from a device, in the form &#x60;[{\&quot;Path\&quot;: \&quot;device_path\&quot;, \&quot;Rate\&quot;: rate}]&#x60;.  */
    public var blkioDeviceReadBps: [ThrottleDevice]?
    /** Limit write rate (bytes per second) to a device, in the form &#x60;[{\&quot;Path\&quot;: \&quot;device_path\&quot;, \&quot;Rate\&quot;: rate}]&#x60;.  */
    public var blkioDeviceWriteBps: [ThrottleDevice]?
    /** Limit read rate (IO per second) from a device, in the form &#x60;[{\&quot;Path\&quot;: \&quot;device_path\&quot;, \&quot;Rate\&quot;: rate}]&#x60;.  */
    public var blkioDeviceReadIOps: [ThrottleDevice]?
    /** Limit write rate (IO per second) to a device, in the form &#x60;[{\&quot;Path\&quot;: \&quot;device_path\&quot;, \&quot;Rate\&quot;: rate}]&#x60;.  */
    public var blkioDeviceWriteIOps: [ThrottleDevice]?
    /** The length of a CPU period in microseconds. */
    public var cpuPeriod: Int64?
    /** Microseconds of CPU time that the container can get in a CPU period. */
    public var cpuQuota: Int64?
    /** The length of a CPU real-time period in microseconds. Set to 0 to allocate no time allocated to real-time tasks. */
    public var cpuRealtimePeriod: Int64?
    /** The length of a CPU real-time runtime in microseconds. Set to 0 to allocate no time allocated to real-time tasks. */
    public var cpuRealtimeRuntime: Int64?
    /** CPUs in which to allow execution (e.g., &#x60;0-3&#x60;, &#x60;0,1&#x60;) */
    public var cpusetCpus: String?
    /** Memory nodes (MEMs) in which to allow execution (0-3, 0,1). Only effective on NUMA systems. */
    public var cpusetMems: String?
    /** A list of devices to add to the container. */
    public var devices: [DeviceMapping]?
    /** a list of cgroup rules to apply to the container */
    public var deviceCgroupRules: [String]?
    /** Disk limit (in bytes). */
    public var diskQuota: Int64?
    /** Kernel memory limit in bytes. */
    public var kernelMemory: Int64?
    /** Memory soft limit in bytes. */
    public var memoryReservation: Int64?
    /** Total memory limit (memory + swap). Set as &#x60;-1&#x60; to enable unlimited swap. */
    public var memorySwap: Int64?
    /** Tune a container&#39;s memory swappiness behavior. Accepts an integer between 0 and 100. */
    public var memorySwappiness: Int64?
    /** CPU quota in units of 10&lt;sup&gt;-9&lt;/sup&gt; CPUs. */
    public var nanoCPUs: Int64?
    /** Disable OOM Killer for the container. */
    public var oomKillDisable: Bool?
    /** Tune a container&#39;s pids limit. Set -1 for unlimited. */
    public var pidsLimit: Int64?
    /** A list of resource limits to set in the container. For example: &#x60;{\&quot;Name\&quot;: \&quot;nofile\&quot;, \&quot;Soft\&quot;: 1024, \&quot;Hard\&quot;: 2048}&#x60;\&quot;  */
    public var ulimits: [ResourcesUlimits]?
    /** The number of usable CPUs (Windows only).  On Windows Server containers, the processor resource controls are mutually exclusive. The order of precedence is &#x60;CPUCount&#x60; first, then &#x60;CPUShares&#x60;, and &#x60;CPUPercent&#x60; last.  */
    public var cpuCount: Int64?
    /** The usable percentage of the available CPUs (Windows only).  On Windows Server containers, the processor resource controls are mutually exclusive. The order of precedence is &#x60;CPUCount&#x60; first, then &#x60;CPUShares&#x60;, and &#x60;CPUPercent&#x60; last.  */
    public var cpuPercent: Int64?
    /** Maximum IOps for the container system drive (Windows only) */
    public var iOMaximumIOps: Int64?
    /** Maximum IO in bytes per second for the container system drive (Windows only) */
    public var iOMaximumBandwidth: Int64?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["CpuShares"] = self.cpuShares?.encodeToJSON()
        nillableDictionary["Memory"] = self.memory?.encodeToJSON()
        nillableDictionary["CgroupParent"] = self.cgroupParent
        nillableDictionary["BlkioWeight"] = self.blkioWeight?.encodeToJSON()
        nillableDictionary["BlkioWeightDevice"] = self.blkioWeightDevice?.encodeToJSON()
        nillableDictionary["BlkioDeviceReadBps"] = self.blkioDeviceReadBps?.encodeToJSON()
        nillableDictionary["BlkioDeviceWriteBps"] = self.blkioDeviceWriteBps?.encodeToJSON()
        nillableDictionary["BlkioDeviceReadIOps"] = self.blkioDeviceReadIOps?.encodeToJSON()
        nillableDictionary["BlkioDeviceWriteIOps"] = self.blkioDeviceWriteIOps?.encodeToJSON()
        nillableDictionary["CpuPeriod"] = self.cpuPeriod?.encodeToJSON()
        nillableDictionary["CpuQuota"] = self.cpuQuota?.encodeToJSON()
        nillableDictionary["CpuRealtimePeriod"] = self.cpuRealtimePeriod?.encodeToJSON()
        nillableDictionary["CpuRealtimeRuntime"] = self.cpuRealtimeRuntime?.encodeToJSON()
        nillableDictionary["CpusetCpus"] = self.cpusetCpus
        nillableDictionary["CpusetMems"] = self.cpusetMems
        nillableDictionary["Devices"] = self.devices?.encodeToJSON()
        nillableDictionary["DeviceCgroupRules"] = self.deviceCgroupRules?.encodeToJSON()
        nillableDictionary["DiskQuota"] = self.diskQuota?.encodeToJSON()
        nillableDictionary["KernelMemory"] = self.kernelMemory?.encodeToJSON()
        nillableDictionary["MemoryReservation"] = self.memoryReservation?.encodeToJSON()
        nillableDictionary["MemorySwap"] = self.memorySwap?.encodeToJSON()
        nillableDictionary["MemorySwappiness"] = self.memorySwappiness?.encodeToJSON()
        nillableDictionary["NanoCPUs"] = self.nanoCPUs?.encodeToJSON()
        nillableDictionary["OomKillDisable"] = self.oomKillDisable
        nillableDictionary["PidsLimit"] = self.pidsLimit?.encodeToJSON()
        nillableDictionary["Ulimits"] = self.ulimits?.encodeToJSON()
        nillableDictionary["CpuCount"] = self.cpuCount?.encodeToJSON()
        nillableDictionary["CpuPercent"] = self.cpuPercent?.encodeToJSON()
        nillableDictionary["IOMaximumIOps"] = self.iOMaximumIOps?.encodeToJSON()
        nillableDictionary["IOMaximumBandwidth"] = self.iOMaximumBandwidth?.encodeToJSON()
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
